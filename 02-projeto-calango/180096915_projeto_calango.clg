algoritmo projetoCalango;
// Síntese
//  Objetivo: criar um sistema de gerenciamento de uma disciplina.
//  Entrada : opção digitada do menu
//  Saída   : mostrar funcionalidade da opcao digitada

principal
	// Declarações
	texto user, aluno[1000], mat[1000];
	inteiro opcao, num, idade[1000];
	real nota[1000];
	num = 0;
	
	// Instruções
	escreval("=== SGD - Sistema de Gerenciamento de Disciplina ===");
	escreva("Olá, qual é seu nome? ");
	leia(user);
	escreval("Seja Bem Vindo(a) " + user + "!");
	faca
		menu();
		leia(opcao);
		limpaTela();
		escolha (opcao)
			caso 1
				num = numAluno(user, num);
				cadAluno(num, aluno, mat, idade, nota);
			interrompa;
			caso 2
				listarAlunos(num,aluno, mat, nota);
			interrompa;
			caso 3
				listarAprovados(num, aluno, mat, nota);
			interrompa;
			caso 4
				listarReprovados(num, aluno, mat, nota);
			interrompa;
			caso 5
				pesquisarAluno(user, num, aluno, mat, nota);
			interrompa;
			caso 6
				gerarRelatorio (num, aluno, nota, idade);
			interrompa;
			caso 7
				sair(user);
			interrompa;
			outroCaso
				escreval("Você digitou um comando inválido. Por favor, escolha um comando válido");
		fimEscolha
	enquanto(opcao != 7);
fimPrincipal

procedimento menu ()
	escreval("--------------------");
	escreval("Escolha abaixo a opção desejada:");
	escreval("1) Cadastrar Estudante");
	escreval("2) Listar Estudantes");
	escreval("3) Listar Aprovados");
	escreval("4) Listar Reprovados");
	escreval("5) Pesquisar Estudante");
	escreval("6) Gerar Relatório da Turma");
	escreval("7) Finalizar Programa");
fimProcedimento

funcao inteiro numAluno (texto usuario, inteiro num)
	escreva("Quantos alunos deseja cadastrar, " + usuario + "? ");
	leia(num); 
	retorna num;
fimFuncao

procedimento cadAluno (inteiro num, texto aluno[], texto mat[], inteiro idade[], real nota[])
	inteiro c;
	para (c de 0 ate num-1 passo 1) faca
		escreva("Nome do " + (c+1) + "º aluno: ");
		leia(aluno[c]);

		faca	
			escreva("Matrícula de " + aluno[c] + ": ");
			leia(mat[c]);
			// Conferir se matrícula tem 10 caracteres
			se (tamanhoTexto(mat[c]) != 10) entao
				escreval("Erro! Matrícula incorreta, insira uma matrícula correta.");
			fimSe
		enquanto (tamanhoTexto(mat[c]) != 10);
	
		faca
			escreva("Idade de " + aluno[c] + ": ");
			leia(idade[c]);
			// Conferir se idade é positiva
			se(idade[c] < 0 ) entao
				escreval("Erro! Idade negativa, insira uma idade positiva.");
			fimSe
		enquanto (idade[c] < 0 );
	
		faca 
			escreva("Nota de " + aluno[c] + ": ");
			leia(nota[c]);
			// Conferir se nota está correta
			se((nota[c] < 0) ou (nota[c] > 10)) entao
				escreval("Erro! Nota incorreta, insira uma nota correta.");
			fimSe		
		enquanto((nota[c] < 0) ou (nota[c] > 10));
		limpaTela();
	fimPara
fimProcedimento

procedimento listarAlunos (inteiro num, texto aluno[], texto mat[], real nota[])
	inteiro c;
	escreval("=== Lista dos Alunos ===");
	escreval("--------------------");
	para (c de 0 ate num-1 passo 1) faca	
		escreval(aluno[c] + " - " + mat[c] + " - " + nota[c]);
	fimPara
fimProcedimento

procedimento listarAprovados (inteiro num, texto aluno[], texto mat[], real nota[])
	inteiro c, aprovados;
	aprovados = 0;
	escreval("=== Lista dos Alunos Aprovados ===");
	para (c de 0 ate num-1 passo 1) faca	
		se (nota[c] >= 5) entao
			aprovados = aprovados + 1;
		fimSe
	fimPara	
	escreval("Números de Aprovados: " + aprovados);
	escreval("--------------------");
	para (c de 0 ate num-1 passo 1) faca	
		se (nota[c] >= 5) entao
			escreval(aluno[c] + " - " + mat[c] + " - " + nota[c]);
		fimSe
	fimPara
fimProcedimento

procedimento listarReprovados (inteiro num, texto aluno[], texto mat[], real nota[])
	inteiro c, reprovados;
	reprovados = 0;
	escreval("=== Lista dos Alunos Reprovados ===");
	para (c de 0 ate num-1 passo 1) faca	
		se (nota[c] < 5) entao
			reprovados = reprovados + 1;
		fimSe
	fimPara	
	escreval("Números de Reprovados: " + reprovados);
	escreval("--------------------");
	para (c de 0 ate num-1 passo 1) faca	
		se (nota[c] < 5) entao
			escreval(aluno[c] + " - " + mat[c] + " - " + nota[c]);
		fimSe
	fimPara
fimProcedimento

procedimento gerarRelatorio (inteiro num, texto aluno[], real nota[], inteiro idade[])
	inteiro c;
	texto maior, menor;
	real mediaNota, mediaIdade, aux1, aux2;
	mediaNota = 0;
	mediaIdade = 0;
	aux1 = 0;
	aux2 = 100000000;
	maior = " ";
	menor = " ";
	
	escreval("=== Relatório Geral da Turma ===");
	escreval("--------------------");
	para (c de 0 ate num-1 passo 1 ) faca
		// Saber media de nota e idade
		mediaNota = mediaNota + nota[c];
		mediaIdade = mediaIdade + idade[c];

		// Melhor e Pior aluno da turma
		se (nota[c] > aux1) entao
			aux1 = nota[c];
			maior = aluno[c];
		senao
			se (nota[c] < aux2) entao
				aux2 = nota[c];
				menor = aluno[c];
			fimSe		
		fimSe
	fimPara

	escreval("Nota Média da Turma: " + mediaNota/num);
	escreval("Idade Média da Turma: " + mediaIdade/num);
	escreval("Aluno com maior nota: " + maior);
	escreval("Aluno com menor nota: " + menor);
fimProcedimento

procedimento pesquisarAluno (texto usuario, inteiro num, texto aluno[], texto mat[], real nota[])
	inteiro c;
	texto pesquisa, mencao[1000];
	logico achei;
	achei = falso;
	escreva(usuario + ", qual nome você deseja pesquisar: ");
	leia(pesquisa);
	
	para (c de 0 ate num-1 passo 1)faca
		// Conferir Menção do aluno
		se (nota[c] == 0) entao
			mencao[c] = "SR";
		senao
			se ((nota[c] >= 1) e (nota[c] < 3)) entao
				mencao[c] = "II";
			senao
				se ((nota[c] >= 3) e (nota[c] < 5)) entao
					mencao[c] = "MI";
				senao
					se ((nota[c] >= 5) e (nota[c] < 7)) entao
						mencao[c] = "MM";
					senao
						se ((nota[c] >= 7) e (nota[c] < 9)) entao
							mencao[c] = "MS";
						senao
							se ((nota[c] >= 9) e (nota[c] <=10)) entao
								mencao[c] = "SS";
							fimSe
						fimSe
					fimSe
				fimSe
			fimSe
		fimSe
		// Mostrar aluno pesquisado
		se (comparaTexto(aluno[c], pesquisa) == 0) entao
			escreval(aluno[c] + " - " + mat[c] + " - " + mencao[c]);
			achei = verdadeiro;
		fimSe
	fimPara
	
	se (achei == falso) entao
		escreval("Aluno não encontrado");
	fimSe
fimProcedimento

procedimento sair (texto usuario)
	escreval("Obrigado por ter usado o sistema " + usuario + ". Até mais!");
fimProcedimento
