algoritmo missao4;
// Síntese
//  Objetivo: criar um programa para registro das notas finais de todos os alunos do professor (que será o usuário do seu programa) modularizar o código com funções e procedimentos.
//  Entrada : leitura de n notas e opcao do menu
//  Saída   : funcionalidade das opções do menu

principal
	// Declarações
	real nota, maior, menor;
	inteiro opcao, alunos, aprovado, reprovado;
	// Instruções
	alunos = 0;
	maior = 0;
	menor = 10000;
	aprovado = 0;
	reprovado = 0;
	
	faca
		escreva("Digite a nota: ");
		leia(nota);
		alunos = alunos + 1;
		aprovacao(nota,aprovado);
		aprovado = aprovacao(nota,aprovado);
		reprovacao(nota,reprovado);
		reprovado = reprovacao(nota,reprovado);
		maior_nota(nota,maior);
		maior = maior_nota(nota,maior);
		menor_nota(nota,menor);
		menor = menor_nota(nota,menor);
	enquanto (nota >= 0);

	faca
		menu();	
		leia(opcao);
		limpaTela();
		escolha (opcao)
			caso 1
				escreval("Total de alunos: " + (alunos-1));
			interrompa;
			caso 2
				escreval("Quantidade de alunos aprovados: " + (aprovacao(nota, aprovado)));
			interrompa;
			caso 3
				escreval("Quantidade de alunos reprovados: " + (reprovado-1));
			interrompa;
			caso 4
				escreval("A maior nota: " + maior);
			interrompa;
			caso 5
				escreval("A menor nota: " + menor);
			interrompa;
			caso 6 
				escreva("Tchau!");
			interrompa;
			outroCaso
				escreval("Comando Invalido! Informe uma opção válida");
			interrompa;		
		fimEscolha
	enquanto (opcao != 6);
fimPrincipal

procedimento menu ()
	escreval("=== MENU ===");
	escreval("1 - Total de alunos");
	escreval("2 - Quantidade de Aprovados");
	escreval("3 - Quantidade de Reprovados");
	escreval("4 - Maior nota");
	escreval("5 - Menor nota");
	escreval("6 - Sair");
fimProcedimento

funcao inteiro aprovacao (real nota, inteiro aprovado)
	se (nota >= 5) entao
		aprovado = aprovado + 1;
	fimSe
	retorna aprovado;
fimFuncao

funcao inteiro reprovacao (real nota, inteiro reprovado)
	se (nota < 5) entao
		reprovado = reprovado + 1;
	fimSe
	retorna reprovado;
fimFuncao

funcao real maior_nota (real nota, real maior)
	se (nota > maior) entao
		maior = nota;
	fimSe
	retorna maior;
fimFuncao

funcao real menor_nota (real nota, real menor)
	se ((nota < menor) e (nota >=0)) entao
		menor = nota;
	fimSe
	retorna menor;
fimFuncao
